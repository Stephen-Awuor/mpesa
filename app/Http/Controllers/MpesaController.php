<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Carbon;
use Illuminate\Support\Facades\Hash;

class MpesaController extends Controller
{
    public function LipaNaMpesaPassword() //Generates base-64 encoded password.
    {
        //timestamp
        $timestamp = Carbon::rawParse('now')->format('YmdHms');
        //passkey
        $passKey = "bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919"; // get it from -> https://developer.safaricom.co.ke/test_credentials
        //businessshortcode
        $businessShortCode = 174379; // get it from -> https://developer.safaricom.co.ke/test_credentials
        //generate password
        $mpesaPassword = base64_encode($businessShortCode.$passKey.$timestamp); //by concatinating(joining) the three
        
        return $mpesaPassword;
    }
    public function newAccessToken(){
        $consumer_key = "blKEE6atNdxXsGREaEppvG1OqfaKO6AB"; //from your app in developer portal.
        $consumer_secret = "pVCBHzcPbL4oTDCm"; //from your app in developer portal.
        $credentials = base64_encode($consumer_key.":".$consumer_secret);//":" is for concatination
        $url = "https://sandbox.safaricom.co.ke/oauth/v1/generate?grant_type=client_credentials";

        $curl = curl_init(); //curl is a php library for making http requests
        curl_setopt($curl, CURLOPT_URL, $url);//  setting a url(the sandbox one)
        curl_setopt($curl, CURLOPT_HTTPHEADER, array("Authorization: Basic ".$credentials,"Content-Type:application/json")); //setting the http header.Mpesa requirers and http header for verification
        curl_setopt($curl, CURLOPT_HEADER,false);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); //returns response after sending request
        $curl_response = curl_exec($curl); //request being executed.
        $access_token=json_decode($curl_response); //response returned
        curl_close($curl); //closing curl request
        return $access_token->access_token;  //if all is successfull, the token is returned. 
    }

    public function stkPush(Request $request)
    {  
            $user = $request->user;
            $amount = $request->amount;
            $phone =  $request->phone;
            $formatedPhone = substr($phone, 1);//729952303
            $code = "254";
            $phoneNumber = $code.$formatedPhone;//254729952303

        $url = 'https://sandbox.safaricom.co.ke/mpesa/stkpush/v1/processrequest'; //Where we are sending the request
        $curl_post_data = [
            'BusinessShortCode' =>174379, //From test credentials page. For live, it's the paybill.
            'Password' => $this->lipaNaMpesaPassword(),//Generated by the method(LipaNaMpesaPassword())
            'Timestamp' => Carbon::rawParse('now')->format('YmdHms'),
            'TransactionType' => 'CustomerPayBillOnline',
            'Amount' => $amount, //or '500'
            'PartyA' => $phoneNumber, // or 254729952303
            'PartyB' => 174379,
            'PhoneNumber' => $phoneNumber, // or 254729952303
            'CallBackURL' => 'https://7db63514dbd1.ngrok.io/api/stk/push/callback/url',//ngrok makes your local development machine securely accessible from the public Internet. This url listens to requests, If user enters the details correctly, it's processed and sent here and return message is generated
            'AccountReference' => "Simon's Tech School Payment", //Name of the business when confirmation to pay appears
            'TransactionDesc' => "lipa Na M-PESA" //Transaction (In bellow codes, the data is encoded before being sent)
        ];
        $data_string = json_encode($curl_post_data);
        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type:application/json','Authorization:Bearer '.$this->newAccessToken()));
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_POST, true);
        curl_setopt($curl, CURLOPT_POSTFIELDS, $data_string);
        $curl_response = curl_exec($curl);
        return redirect('/confirm');    
     }  
     public function MpesaRes(Request $request){
     }
}
